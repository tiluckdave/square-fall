local data = require('main.data')

function init(self)
	if data.bg_color == vmath.vector4(17/255, 17/255, 17/255, 1) then
		data.LIGHT_MODE = false
	else
		data.LIGHT_MODE = true
	end
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	-- seed the random number generator
	math.randomseed(os.time())
	math.random()
	-- message the render script to set the background color
	msg.post('@render:', hash('clear_color'), {color = data.bg_color})
	-- load the start collection	
	msg.post('go#start', 'load')
end

function on_message(self, message_id, message, sender)
	-- check for the "show_game" message (this will be sent from both start.gui_script and gameover.gui_script
	if message_id == hash('show_game') then
		-- check the current state of the game to determine which collection to unload
		if data.state == data.STATE_START then
			-- unload the start collection 
			msg.post("go#start", "unload")
		else
			-- unload the gameover collection 
			msg.post("go#gameover", "unload")
		end
		-- load the game collection 
		msg.post("go#game","load")
	-- check for the "show_gameover" message (this will be sent from container.script
	elseif message_id == hash('show_gameover') then 
		-- unload the game collection 
		msg.post("go#game","unload")
		-- load the gameover collection 
		msg.post("go#gameover","load")
		-- check for the "proxy_loaded" message 
	elseif message_id == hash('proxy_loaded') then 
		-- enable the collection 
		msg.post(sender, 'enable')
	elseif message_id == hash('ld_change') then
		if data.LIGHT_MODE then
			data.LIGHT_MODE = false
			data.bg_color = vmath.vector4(17/255, 17/255, 17/255, 1)
			data.color_one = vmath.vector4(22/255, 185/255, 180/255, 1)
			data.color_two = vmath.vector4(202/255, 202/255, 190/255, 1)
		else
			data.LIGHT_MODE = true
			data.bg_color = vmath.vector4(238/255, 238/255, 238/255, 1)
			data.color_one = vmath.vector4(233/255, 70/255, 75/255, 1)
			data.color_two = vmath.vector4(53/255, 53/255, 65/255, 1)
		end
		data.save()
		msg.post('@render:', hash('clear_color'), {color = data.bg_color})
		msg.post(sender, "ld_change")
	end
end




